{"version":3,"sources":["components/Game/Game.module.css","components/Game/Field/Row/Cell/Cell.module.css","components/Game/Field/Field.module.css","assets/img/bomb.svg","assets/img/flag.svg","components/Game/Field/Row/Cell/Cell.jsx","components/Game/Field/Row/Row.jsx","components/Game/Field/Field.jsx","components/Game/Game.jsx","App.js","index.js"],"names":["module","exports","Cell","props","className","isOpened","styles","cell","opened","onClick","isFlagged","value","timerId","startTimer","openBlank","position","loseGame","openCell","onContextMenu","e","preventDefault","removeFlag","setFlag","front","flag","style","display","src","alt","back","isSelected","backgroundColor","bomb","Row","cells","map","index","Field","i","j","field","some","row","rowIndex","cellIndex","checkWin","timeout","setTimeout","clearInterval","setIsWinning","clearTimeout","winGame","setField","fieldCopy","flagsToRemove","openNeighbours","x","y","length","setFlagsCount","flags","selectCell","setIsLosing","Game","useState","bombs","flagsCount","isLosing","isWinning","time","setTime","setTimerId","getRandomPosition","Math","floor","random","countBombsAround","bombsAround","initField","Array","from","rows","columns","initNumbers","initBombs","game","header","flagsCounter","counter","formatTime","setInterval","modalBox","messageBox","message","button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab913952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__3xNfH\",\"modalBox\":\"Game_modalBox__2eRNT\",\"header\":\"Game_header__3yT7E\",\"messageBox\":\"Game_messageBox__qexnb\",\"message\":\"Game_message__BGu3l\",\"button\":\"Game_button__2wvV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2d5QO\",\"opened\":\"Cell_opened__5z0i0\",\"front\":\"Cell_front__2NkWz\",\"back\":\"Cell_back__1gj64\",\"bomb\":\"Cell_bomb__11kX2\",\"flag\":\"Cell_flag__27t8v\",\"fall\":\"Cell_fall__2MwUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__9aTdZ\"};","export default __webpack_public_path__ + \"static/media/bomb.0d7f7f7c.svg\";","export default __webpack_public_path__ + \"static/media/flag.f69a6237.svg\";","import React from 'react';\r\nimport styles from './Cell.module.css';\r\nimport bomb from '../../../../../assets/img/bomb.svg';\r\nimport flag from '../../../../../assets/img/flag.svg';\r\n\r\nconst Cell = (props) => {\r\n  const clickHandler = () => {\r\n    if (!props.isOpened && !props.isFlagged) {\r\n      if (props.value === null) {\r\n        if (!props.timerId) {\r\n          props.startTimer();\r\n        }\r\n        props.openBlank(props.position);\r\n        return;\r\n      }\r\n\r\n      if (props.value === 'ðŸ’£') {\r\n        props.loseGame(props.position);\r\n        return;\r\n      }\r\n\r\n      props.openCell(props.position);\r\n      if (!props.timerId) {\r\n        props.startTimer();\r\n      }\r\n    }\r\n  };\r\n\r\n  const contextMenuHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!props.isOpened) {\r\n      if (props.isFlagged) {\r\n        props.removeFlag(props.position);\r\n        return;\r\n      }\r\n\r\n      props.setFlag(props.position);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.isOpened ? `${styles.cell} ${styles.opened}` : styles.cell\r\n      }\r\n      onClick={clickHandler}\r\n      onContextMenu={contextMenuHandler}\r\n    >\r\n      <div className={styles.front}>\r\n        <img\r\n          className={styles.flag}\r\n          style={props.isFlagged ? {} : { display: 'none' }}\r\n          src={flag}\r\n          alt=\"flag\"\r\n        />\r\n      </div>\r\n      <div\r\n        className={styles.back}\r\n        style={props.isSelected ? { backgroundColor: 'red' } : {}}\r\n      >\r\n        {props.value === 'ðŸ’£' ? (\r\n          <img className={styles.bomb} src={bomb} alt=\"bomb\" />\r\n        ) : (\r\n          props.value\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport Cell from './Cell/Cell';\r\n\r\nconst Row = (props) => {\r\n  return (\r\n    <>\r\n      {props.cells.map((cell, index) => {\r\n        return (\r\n          <Cell\r\n            key={index}\r\n            position={[props.index, index]}\r\n            value={cell.value}\r\n            isOpened={cell.isOpened}\r\n            isFlagged={cell.isFlagged}\r\n            isSelected={cell.isSelected}\r\n            openCell={props.openCell}\r\n            openBlank={props.openBlank}\r\n            loseGame={props.loseGame}\r\n            setFlag={props.setFlag}\r\n            removeFlag={props.removeFlag}\r\n            timerId={props.timerId}\r\n            startTimer={props.startTimer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport styles from './Field.module.css';\r\n\r\nimport Row from './Row/Row';\r\n\r\nconst Field = (props) => {\r\n  const checkWin = ([i, j]) => {\r\n    return !props.field.some((row, rowIndex) =>\r\n      row.some((cell, cellIndex) => {\r\n        if (\r\n          rowIndex === i &&\r\n          cellIndex === j &&\r\n          cell.value !== 'ðŸ’£' &&\r\n          cell.value !== null\r\n        ) {\r\n          return false;\r\n        }\r\n\r\n        return cell.value !== 'ðŸ’£' && !cell.isOpened;\r\n      })\r\n    );\r\n  };\r\n\r\n  const winGame = () => {\r\n    const timeout = setTimeout(() => {\r\n      clearInterval(props.timerId);\r\n      props.setIsWinning(true);\r\n      clearTimeout(timeout);\r\n    }, 500);\r\n  };\r\n\r\n  const openCell = ([i, j]) => {\r\n    if (checkWin([i, j])) {\r\n      winGame();\r\n    }\r\n\r\n    props.setField(\r\n      props.field.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) => {\r\n          return rowIndex === i && cellIndex === j\r\n            ? { ...cell, isOpened: true }\r\n            : cell;\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const openBlank = ([i, j]) => {\r\n    const fieldCopy = props.field.map((row) => row.map((cell) => cell));\r\n    fieldCopy[i][j].isOpened = true;\r\n    let flagsToRemove = 0;\r\n\r\n    openNeighbours([i, j]);\r\n    props.setFlagsCount(props.flags + flagsToRemove);\r\n    props.setField(fieldCopy);\r\n\r\n    function openNeighbours([i, j]) {\r\n      const directions = [\r\n        [-1, -1],\r\n        [-1, 0],\r\n        [-1, 1],\r\n        [0, -1],\r\n        [0, 1],\r\n        [1, -1],\r\n        [1, 0],\r\n        [1, 1],\r\n      ];\r\n\r\n      for (let [x, y] of directions) {\r\n        if (\r\n          i + y < 0 ||\r\n          i + y >= fieldCopy.length ||\r\n          j + x < 0 ||\r\n          j + x >= fieldCopy[i].length ||\r\n          fieldCopy[i + y][j + x].isOpened\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        switch (fieldCopy[i + y][j + x].value) {\r\n          case null:\r\n            if (fieldCopy[i + y][j + x].isFlagged) {\r\n              flagsToRemove += 1;\r\n              fieldCopy[i + y][j + x].isFlagged = false;\r\n            }\r\n\r\n            fieldCopy[i + y][j + x].isOpened = true;\r\n            openNeighbours([i + y, j + x]);\r\n            break;\r\n\r\n          case 'ðŸ’£':\r\n            continue;\r\n\r\n          default:\r\n            if (fieldCopy[i + y][j + x].isFlagged) {\r\n              flagsToRemove += 1;\r\n              fieldCopy[i + y][j + x].isFlagged = false;\r\n            }\r\n\r\n            fieldCopy[i + y][j + x].isOpened = true;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const openAll = (field) => {\r\n    return field.map((row) => row.map((cell) => ({ ...cell, isOpened: true })));\r\n  };\r\n\r\n  const selectCell = (field, [i, j]) => {\r\n    return field.map((row, rowIndex) =>\r\n      row.map((cell, cellIndex) =>\r\n        i === rowIndex && j === cellIndex ? { ...cell, isSelected: true } : cell\r\n      )\r\n    );\r\n  };\r\n\r\n  const loseGame = ([i, j]) => {\r\n    clearInterval(props.timerId);\r\n    let fieldCopy = props.field.map((row) => row.map((cell) => cell));\r\n    fieldCopy = openAll(fieldCopy);\r\n    fieldCopy = selectCell(fieldCopy, [i, j]);\r\n    props.setField(fieldCopy);\r\n\r\n    const timeout = setTimeout(() => {\r\n      props.setIsLosing(true);\r\n      clearTimeout(timeout);\r\n    }, 1000);\r\n  };\r\n\r\n  const setFlag = ([i, j]) => {\r\n    props.setField(\r\n      props.field.map((row, rowIndex) => {\r\n        return row.map((cell, cellIndex) => {\r\n          return i === rowIndex && j === cellIndex\r\n            ? { ...cell, isFlagged: true }\r\n            : cell;\r\n        });\r\n      })\r\n    );\r\n\r\n    props.setFlagsCount(props.flags - 1);\r\n  };\r\n\r\n  const removeFlag = ([i, j]) => {\r\n    props.setField(\r\n      props.field.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) =>\r\n          i === rowIndex && j === cellIndex\r\n            ? { ...cell, isFlagged: false }\r\n            : cell\r\n        )\r\n      )\r\n    );\r\n    props.setFlagsCount(props.flags + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.field}>\r\n      {props.field.map((row, index) => {\r\n        return (\r\n          <Row\r\n            key={index}\r\n            index={index}\r\n            cells={row}\r\n            openCell={openCell}\r\n            openBlank={openBlank}\r\n            loseGame={loseGame}\r\n            setFlag={setFlag}\r\n            removeFlag={removeFlag}\r\n            timerId={props.timerId}\r\n            startTimer={props.startTimer}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import React, { useState } from 'react';\r\nimport styles from './Game.module.css';\r\n\r\nimport Field from './Field/Field';\r\n\r\nconst Game = (props) => {\r\n  const [flagsCount, setFlagsCount] = useState(props.bombs);\r\n  const [isLosing, setIsLosing] = useState(false);\r\n  const [isWinning, setIsWinning] = useState(false);\r\n  const [time, setTime] = useState(0);\r\n  const [timerId, setTimerId] = useState(null);\r\n\r\n  const getRandomPosition = (field) => {\r\n    const rowIndex = Math.floor(Math.random() * field.length);\r\n    const row = field[rowIndex];\r\n\r\n    const cellIndex = Math.floor(Math.random() * row.length);\r\n\r\n    return [rowIndex, cellIndex];\r\n  };\r\n\r\n  const initBombs = (field) => {\r\n    for (let i = 0; i < props.bombs; i++) {\r\n      let [rowIndex, cellIndex] = getRandomPosition(field);\r\n\r\n      while (field[rowIndex][cellIndex].value === 'ðŸ’£') {\r\n        [rowIndex, cellIndex] = getRandomPosition(field);\r\n      }\r\n\r\n      field[rowIndex][cellIndex].value = 'ðŸ’£';\r\n    }\r\n\r\n    return field;\r\n  };\r\n\r\n  const countBombsAround = (field, i, j) => {\r\n    let bombsAround = 0;\r\n    if (i - 1 >= 0) {\r\n      if (j - 1 >= 0 && field[i - 1][j - 1].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n\r\n      if (field[i - 1][j].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n\r\n      if (j + 1 < field[i].length && field[i - 1][j + 1].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n    }\r\n\r\n    if (i + 1 < field.length) {\r\n      if (j - 1 >= 0 && field[i + 1][j - 1].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n\r\n      if (field[i + 1][j].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n\r\n      if (j + 1 < field[i].length && field[i + 1][j + 1].value === 'ðŸ’£') {\r\n        bombsAround += 1;\r\n      }\r\n    }\r\n\r\n    if (j - 1 >= 0 && field[i][j - 1].value === 'ðŸ’£') {\r\n      bombsAround += 1;\r\n    }\r\n\r\n    if (j + 1 < field[i].length && field[i][j + 1].value === 'ðŸ’£') {\r\n      bombsAround += 1;\r\n    }\r\n\r\n    return bombsAround === 0 ? null : bombsAround;\r\n  };\r\n\r\n  const initNumbers = (field) => {\r\n    for (let i = 0; i < field.length; i++) {\r\n      for (let j = 0; j < field[i].length; j++) {\r\n        if (field[i][j].value !== 'ðŸ’£') {\r\n          const bombsAround = countBombsAround(field, i, j);\r\n          field[i][j].value = bombsAround === 0 ? null : bombsAround;\r\n        }\r\n      }\r\n    }\r\n\r\n    return field;\r\n  };\r\n\r\n  const initField = () => {\r\n    let field = Array.from(Array(props.rows), () =>\r\n      Array.from(Array(props.columns), () => ({\r\n        value: null,\r\n        isOpened: false,\r\n        isFlagged: false,\r\n        isSelected: false,\r\n      }))\r\n    );\r\n\r\n    field = initBombs(field);\r\n    field = initNumbers(field);\r\n    return field;\r\n  };\r\n\r\n  const [field, setField] = useState(initField());\r\n\r\n  const retry = () => {\r\n    setFlagsCount(props.bombs);\r\n    setIsLosing(false);\r\n    setIsWinning(false);\r\n    setTime(0);\r\n    setTimerId(null);\r\n    setField(initField());\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setTimerId(\r\n      setInterval(() => {\r\n        setTime((time) => time + 1);\r\n      }, 1000)\r\n    );\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    if (time < 10) {\r\n      return `00${time}`;\r\n    }\r\n\r\n    if (time < 100) {\r\n      return `0${time}`;\r\n    }\r\n\r\n    if (time > 999) {\r\n      return 999;\r\n    }\r\n\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.game}>\r\n      <header className={styles.header}>\r\n        <div className={styles.flagsCounter}>Flags remaining: {flagsCount}</div>\r\n        <div className={styles.counter}>{formatTime(time)}</div>\r\n      </header>\r\n\r\n      <Field\r\n        field={field}\r\n        setField={setField}\r\n        flags={flagsCount}\r\n        setFlagsCount={setFlagsCount}\r\n        setIsWinning={setIsWinning}\r\n        setIsLosing={setIsLosing}\r\n        timerId={timerId}\r\n        startTimer={startTimer}\r\n      />\r\n\r\n      {isLosing || isWinning ? (\r\n        <div className={styles.modalBox}>\r\n          <div className={styles.messageBox}>\r\n            <h1 className={styles.message}>\r\n              {isWinning ? 'You Win' : 'You Lose'}\r\n            </h1>\r\n            <button className={styles.button} onClick={retry}>\r\n              Play again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Game from './components/Game/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game rows={8} columns={10} bombs={10} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}